# (C) 2021 GoodData Corporation
[project]
name = "gooddata-python-sdk-workspace"
version = "1.53.0"
description = "GoodData Python SDK Workspace"
requires-python = ">=3.9"
dependencies = [
    "gooddata-sdk",
    "gooddata-pandas",
    "gooddata-dbt",
    "gooddata-fdw",
    "gooddata-flight-server",
    "gooddata-flexconnect",
    "gooddata-api-client",
    "tests-support",
]

[tool.uv.sources]
gooddata-sdk = { workspace = true }
gooddata-pandas = { workspace = true }
gooddata-dbt = { workspace = true }
gooddata-fdw = { workspace = true }
gooddata-flight-server = { workspace = true }
gooddata-flexconnect = { workspace = true }
tests-support = { workspace = true }
gooddata-api-client = { path = "gooddata-api-client", editable = true }

[tool.uv.workspace]
# note gooddata-api-client is not a workspace package, it is a dependency of other packages
members = ["packages/*"]

[dependency-groups]
dev = [
    "pre-commit~=4.0.1",
    "gitlint~=0.19.1",
]
lint = [
    "ruff==0.9.5",
]
type = [
    "mypy~=1.11.2"
]
release = [
    "tbump~=6.11.0",
    "tomlkit>=0.11"
]
tox = [
    "tox~=4.26.0",
    "tox-uv~=1.26.1"
]

[tool.ruff]
exclude = [
    ".git",
    ".venv",
    "__pycache__",
    ".tox",
    "build",
    "dist",
    "gooddata-api-client",
]
line-length = 120
lint.select = [
    "E",       # pycodestyle errors
    "F",       # pyflakes
    "I",       # isort
    "PERF",    # perflint
    "PIE",
    "PLR0402", # prevent unnecessary manual import aliases
    "PLR1711", # prevent useless returns
    "SIM",
    "UP",
    "W",       # pycodestyle warnings
    "D417",    # undocumented-param
]
lint.ignore = [
    # rules recommended to be ignored when using ruff format
    "E501",
    "W191",
    # ignore the rule banning Optional[X] in favor of X | None, we are fine with Optional for now
    "UP007",
    # ignore the rule, because it presents non-zero perf cost
    "SIM105",
]
target-version = "py39"

[tool.ruff.lint.per-file-ignores]
"packages/gooddata-pandas/src/gooddata_pandas/__init__.py" = ["F401"]
"packages/gooddata-sdk/src/gooddata_sdk/*/__init__.py" = ["F401"]
"packages/gooddata-sdk/src/gooddata_sdk/__init__.py" = ["F401"]
"packages/gooddata-dbt/src/gooddata_dbt/__init__.py" = ["F401"]
"packages/gooddata-fdw/src/gooddata_fdw/__init__.py" = ["F401"]
"packages/gooddata-flight-server/src/gooddata_flight_server/__init__.py" = ["F401"]
"packages/gooddata-flexconnect/src/gooddata_flexconnect/__init__.py" = ["F401"]

[tool.ruff.format]
exclude = ['(gooddata-api-client|.*\.snapshot\..*)']
# use ruff to format code examples in docstrings as well
docstring-code-format = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.tbump]
# Uncomment this if your project is hosted on GitHub:
# github_url = "https://github.com/<user or organization>/<project>/"

[tool.tbump.version]
current = "1.53.0"
regex = '''
  (?P<major>\d+)
  \.
  (?P<minor>\d+)
  \.
  (?P<patch>\d+)
  ((a(?P<alpha>\d+))?
  |
  (\.dev(?P<dev>\d+))?)
  '''

[[tool.tbump.field]]
name = "alpha"
default = ""

[tool.tbump.git]
message_template = "Bump to {new_version}"
tag_template = "v{new_version}"

[[tool.tbump.file]]
# root workspace pyproject.toml
src = "pyproject.toml"
search = 'version = "{current_version}"'

[[tool.tbump.file]]
# clients setup.py
src = "gooddata-*-client/setup.py"
search = "VERSION = \"{current_version}\""

[[tool.tbump.file]]
# fdw pyproject.toml
src = "packages/gooddata-fdw/pyproject.toml"
search = "version = \"{current_version}\""

[[tool.tbump.file]]
# fdw pyproject.toml dependency
src = "packages/gooddata-fdw/pyproject.toml"
search = "gooddata-sdk~={current_version}"

[[tool.tbump.file]]
# pandas pyproject.toml
src = "packages/gooddata-pandas/pyproject.toml"
search = "version = \"{current_version}\""

[[tool.tbump.file]]
# pandas pyproject.toml dependency
src = "packages/gooddata-pandas/pyproject.toml"
search = "gooddata-sdk~={current_version}"

[[tool.tbump.file]]
# sdk pyproject.toml
src = "packages/gooddata-sdk/pyproject.toml"
search = "version = \"{current_version}\""

[[tool.tbump.file]]
# sdk pyproject.toml dependency
src = "packages/gooddata-sdk/pyproject.toml"
search = "gooddata-.*-client~={current_version}"

[[tool.tbump.file]]
# dbt pyproject.toml
src = "packages/gooddata-dbt/pyproject.toml"
search = "version = \"{current_version}\""

[[tool.tbump.file]]
# dbt pyproject.toml dependency
src = "packages/gooddata-dbt/pyproject.toml"
search = "gooddata-sdk~={current_version}"

[[tool.tbump.file]]
# gooddata-flight-server pyproject.toml
src = "packages/gooddata-flight-server/pyproject.toml"
search = "version = \"{current_version}\""

[[tool.tbump.file]]
# gooddata-flexconnect pyproject.toml
src = "packages/gooddata-flexconnect/pyproject.toml"
search = "version = \"{current_version}\""

[[tool.tbump.file]]
# gooddata-flexconnect pyproject.toml dependency
src = "packages/gooddata-flexconnect/pyproject.toml"
search = "gooddata-sdk~={current_version}"

[[tool.tbump.file]]
# gooddata-flexconnect pyproject.toml dependency
src = "packages/gooddata-flexconnect/pyproject.toml"
search = "gooddata-flight-server~={current_version}"

[[tool.tbump.file]]
# clients README
src = "gooddata-*-client/README.md"

[[tool.tbump.file]]
# clients user agent
src = "gooddata-*-client/gooddata_*_client/api_client.py"

[[tool.tbump.file]]
# clients config
src = "gooddata-*-client/gooddata_*_client/configuration.py"

[[tool.tbump.file]]
# clients __init__.py
src = "gooddata-*-client/gooddata_*_client/__init__.py"

[[tool.tbump.file]]
# clients generator configs
src = ".openapi-generator/configs/gooddata-*-client.yaml"

[[tool.tbump.file]]
src = "packages/gooddata-sdk/pyproject.toml"
search = 'Documentation = "https://www.gooddata.com/docs/python-sdk/{current_version}"'

[[tool.tbump.file]]
src = "packages/gooddata-sdk/README.md"
search = "https://www.gooddata.com/docs/python-sdk/{current_version}"

[[tool.tbump.file]]
src = "packages/gooddata-pandas/pyproject.toml"
search = 'Documentation = "https://gooddata-pandas.readthedocs.io/en/v{current_version}"'

[[tool.tbump.file]]
src = "packages/gooddata-fdw/pyproject.toml"
search = 'Documentation = "https://gooddata-fdw.readthedocs.io/en/v{current_version}"'

[[tool.tbump.file]]
src = "packages/gooddata-flight-server/pyproject.toml"
search = 'Documentation = "https://gooddata-flight-server.readthedocs.io/en/v{current_version}"'

[[tool.tbump.file]]
src = "packages/gooddata-flexconnect/pyproject.toml"
search = 'Documentation = "https://gooddata-flexconnect.readthedocs.io/en/v{current_version}"'

[[tool.tbump.file]]
# gooddata-pipelines version
src = "packages/gooddata-pipelines/pyproject.toml"
search = 'version = "{current_version}"'

[[tool.tbump.file]]
# gooddata-sdk version in gooddata-pipelines dependencies
src = "packages/gooddata-pipelines/pyproject.toml"
search = "gooddata-sdk~={current_version}"

# You can specify a list of commands to
# run after the files have been patched
# and before the git commit is made

#  [[tool.tbump.before_commit]]
#  name = "check changelog"
#  cmd = "grep -q {new_version} Changelog.rst"

# Or run some commands after the git tag and the branch
# have been pushed:
#  [[tool.tbump.after_push]]
#  name = "publish"
#  cmd = "./publish.sh"
