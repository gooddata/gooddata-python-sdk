# (C) 2022 GoodData Corporation
# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build Python Package and Create Release

on:
  push:
    tags:
      - v*.*.*

permissions:
  contents: write

jobs:
  build:
    name: Build all components
    strategy:
      matrix:
        component:
          - gooddata-api-client
          - gooddata-pandas
          - gooddata-fdw
          - gooddata-sdk
          - gooddata-dbt
          - gooddata-flight-server
          - gooddata-flexconnect
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version-file: '.python-version'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Build ${{ matrix.component }}
      run: |
          cd ${{ matrix.component }}
          python -m build
    - name: Persist ${{ matrix.component }} artifacts
      uses: actions/upload-artifact@v4
      with:
        name: artifacts_${{ matrix.component }}
        path: ${{ matrix.component }}/dist/
        if-no-files-found: error
  github_release:
    name: Create GitHub release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Obtain artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/
      - name: Generate changelog
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          tag: ${{ github.ref_name }}
          writeToFile: false
          includeRefIssues: false
          useGitmojis: false
      - name: Create GitHub release
        uses: "softprops/action-gh-release@v2"
        with:
          body: ${{ steps.changelog.outputs.changes }}
          token: "${{ secrets.GITHUB_TOKEN }}"
          draft: false
          prerelease: false
          make_latest: true
          files: |
                  dist/**/*.whl
                  dist/**/*.tar.gz
  publish:
    name: Publish components
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        component:
          - gooddata-api-client
          - gooddata-pandas
          - gooddata-fdw
          - gooddata-sdk
          - gooddata-dbt
          - gooddata-flight-server
          - gooddata-flexconnect
    steps:
      - name: Obtain ${{ matrix.component }} artifacts
        uses: actions/download-artifact@v4
        with:
          name: artifacts_${{ matrix.component }}
          path: dist/${{ matrix.component }}
      - name: Push ${{ matrix.component}} to pypi
        uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages_dir: dist/${{ matrix.component }}
          verbose: true
  slack-notification:
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - name: Notify to slack
        uses: slackapi/slack-github-action@v2.0.0
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            channel: "#releases"
            text: "The release of *gooddata-python-sdk@${{ github.ref_name }}*, has been successful. :tada:"
