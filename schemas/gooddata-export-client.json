{
  "components": {
    "schemas": {
      "CustomLabel": {
        "description": "Custom label object override.",
        "properties": {
          "title": {
            "description": "Override value.",
            "type": "string"
          }
        },
        "required": [
          "title"
        ],
        "type": "object"
      },
      "CustomMetric": {
        "description": "Custom metric object override.",
        "properties": {
          "format": {
            "description": "Format override.",
            "type": "string"
          },
          "title": {
            "description": "Metric title override.",
            "type": "string"
          }
        },
        "required": [
          "format",
          "title"
        ],
        "type": "object"
      },
      "CustomOverride": {
        "description": "Custom cell value overrides (IDs will be replaced with specified values).",
        "properties": {
          "labels": {
            "additionalProperties": {
              "$ref": "#/components/schemas/CustomLabel"
            },
            "description": "Map of CustomLabels with keys used as placeholders in document.",
            "type": "object"
          },
          "metrics": {
            "additionalProperties": {
              "$ref": "#/components/schemas/CustomMetric"
            },
            "description": "Map of CustomMetrics with keys used as placeholders in document.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "ExportResponse": {
        "properties": {
          "exportResult": {
            "type": "string"
          }
        },
        "required": [
          "exportResult"
        ],
        "type": "object"
      },
      "JsonNode": {
        "description": "Metadata definition in open form JSON format.",
        "example": "\"metadata\":{}",
        "type": "object"
      },
      "PdfExportRequest": {
        "description": "Export request object describing the export properties and metadata for pdf exports.",
        "properties": {
          "dashboardId": {
            "description": "Dashboard identifier",
            "example": "761cd28b-3f57-4ac9-bbdc-1c552cc0d1d0",
            "type": "string"
          },
          "fileName": {
            "description": "File name to be used for retrieving the pdf document.",
            "example": "filename",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/components/schemas/JsonNode"
          }
        },
        "required": [
          "dashboardId",
          "fileName"
        ],
        "type": "object"
      },
      "PdfTableStyle": {
        "description": "Custom CSS styles for the table. (PDF, HTML)",
        "example": [
          {
            "properties": [
              {
                "key": "font-size",
                "value": "30px"
              }
            ],
            "selector": "th"
          }
        ],
        "properties": {
          "properties": {
            "description": "List of CSS properties.",
            "items": {
              "$ref": "#/components/schemas/PdfTableStyleProperty"
            },
            "type": "array"
          },
          "selector": {
            "description": "CSS selector where to apply given properties.",
            "type": "string"
          }
        },
        "required": [
          "selector"
        ],
        "type": "object"
      },
      "PdfTableStyleProperty": {
        "description": "CSS property.",
        "properties": {
          "key": {
            "description": "CSS property key.",
            "type": "string"
          },
          "value": {
            "description": "CSS property value.",
            "type": "string"
          }
        },
        "required": [
          "key",
          "value"
        ],
        "type": "object"
      },
      "Settings": {
        "description": "Additional settings.",
        "properties": {
          "mergeHeaders": {
            "description": "Merge equal headers in neighbouring cells. (XLSX)",
            "example": true,
            "type": "boolean"
          },
          "pdfPageSize": {
            "description": "Page size and orientation. (PDF)",
            "example": "a4 landscape",
            "type": "string"
          },
          "pdfTableStyle": {
            "description": "Custom CSS styles for the table. (PDF, HTML)",
            "example": [
              {
                "properties": [
                  {
                    "key": "font-size",
                    "value": "30px"
                  }
                ],
                "selector": "th"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/PdfTableStyle"
            },
            "type": "array"
          },
          "pdfTopLeftContent": {
            "description": "Top left header content. (PDF)",
            "example": "Good",
            "type": "string"
          },
          "pdfTopRightContent": {
            "description": "Top right header content. (PDF)",
            "example": "Morning",
            "type": "string"
          },
          "showFilters": {
            "description": "Print applied filters on top of the document. (Not supported yet)",
            "example": false,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "TabularExportRequest": {
        "description": "Export request object describing the export properties and overrides for tabular exports.",
        "properties": {
          "customOverride": {
            "$ref": "#/components/schemas/CustomOverride"
          },
          "executionResult": {
            "description": "Execution result identifier.",
            "example": "ff483727196c9dc862c7fd3a5a84df55c96d61a4",
            "type": "string"
          },
          "fileName": {
            "description": "Filename of downloaded file without extension.",
            "example": "result",
            "type": "string"
          },
          "format": {
            "description": "Expected file format.",
            "enum": [
              "CSV",
              "XLSX",
              "HTML",
              "PDF"
            ],
            "example": "CSV",
            "type": "string"
          },
          "settings": {
            "$ref": "#/components/schemas/Settings"
          },
          "visualizationObject": {
            "description": "Visualization object identifier. Alternative to executionResult property. (HTML/PDF only)",
            "example": "f7c359bc-c230-4487-b15b-ad9685bcb537",
            "type": "string"
          }
        },
        "required": [
          "fileName",
          "format"
        ],
        "type": "object"
      }
    }
  },
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "openapi": "3.0.1",
  "paths": {
    "/api/v1/actions/workspaces/{workspaceId}/export/tabular": {
      "post": {
        "description": "An tabular export job will be created based on the export request and put to queue to be executed. The result of the operation will be an exportResult identifier that will be assembled by the client into a url that can be polled.",
        "operationId": "createTabularExport",
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TabularExportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportResponse"
                }
              }
            },
            "description": "Tabular export request created successfully."
          }
        },
        "summary": "Create tabular export request",
        "tags": [
          "Computation",
          "actions"
        ],
        "x-gdc-security-info": {
          "description": "Permissions required to execute tabular export.",
          "permissions": [
            "EXPORT_TABULAR"
          ]
        }
      }
    },
    "/api/v1/actions/workspaces/{workspaceId}/export/tabular/{exportId}": {
      "get": {
        "description": "After clients creates a POST export request, the processing of it will start shortly asynchronously. To retrieve the result, client has to check periodically for the result on this endpoint. In case the result isn't ready yet, the service returns 202. If the result is ready, it returns 200 and octet stream of the result file with provided filename.",
        "operationId": "getTabularExport",
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "exportId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/pdf": {},
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {},
              "text/csv": {},
              "text/html": {}
            },
            "description": "Binary export result.",
            "headers": {
              "Content-Disposition": {
                "schema": {
                  "example": "attachment; filename='result.csv'",
                  "pattern": "attachment; filename='[^']+'",
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "202": {
            "content": {
              "application/pdf": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              },
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              },
              "text/csv": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              },
              "text/html": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": "Request is accepted, provided exportId exists, but export is not yet ready."
          }
        },
        "summary": "Retrieve exported files",
        "tags": [
          "Computation",
          "actions"
        ],
        "x-gdc-security-info": {
          "description": "Minimal permission required to use this endpoint.",
          "permissions": [
            "EXPORT_TABULAR"
          ]
        }
      }
    },
    "/api/v1/actions/workspaces/{workspaceId}/export/visual": {
      "post": {
        "description": "An visual export job will be created based on the export request and put to queue to be executed. The result of the operation will be an exportResult identifier that will be assembled by the client into a url that can be polled.",
        "operationId": "createPdfExport",
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PdfExportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportResponse"
                }
              }
            },
            "description": "Visual export request created successfully."
          }
        },
        "summary": "Create visual - pdf export request",
        "tags": [
          "Exporting",
          "actions"
        ],
        "x-gdc-security-info": {
          "description": "Permissions required to execute pdf export.",
          "permissions": [
            "EXPORT_PDF"
          ]
        }
      }
    },
    "/api/v1/actions/workspaces/{workspaceId}/export/visual/{exportId}": {
      "get": {
        "description": "Returns 202 until original POST export request is not processed.Returns 200 with exported data once the export is done.",
        "operationId": "getExportedFile",
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "exportId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/pdf": {}
            },
            "description": "Binary export result.",
            "headers": {
              "Content-Disposition": {
                "schema": {
                  "example": "attachment; filename='result.pdf'",
                  "pattern": "attachment; filename='[^']+'",
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "202": {
            "content": {
              "application/pdf": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": "Request is accepted, provided exportId exists, but export is not yet ready."
          }
        },
        "summary": "Retrieve exported files",
        "tags": [
          "Exporting",
          "actions"
        ],
        "x-gdc-security-info": {
          "description": "Minimal permission required to use this endpoint.",
          "permissions": [
            "EXPORT_PDF"
          ]
        }
      }
    },
    "/api/v1/actions/workspaces/{workspaceId}/export/visual/{exportId}/metadata": {
      "get": {
        "description": "This endpoints serves as a cache for user defined metadata for the front end ui to retrieve them, if one was created using the POST ../export/visual endpoint. The metadata structure is not verified. If metadata for given {exportId} has been found, endpoint returns the value 200 else 404.",
        "operationId": "getMetadata",
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "exportId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "Json metadata representation"
          }
        },
        "summary": "Retrieve metadata context",
        "tags": [
          "Exporting",
          "actions"
        ],
        "x-gdc-security-info": {
          "description": "Minimal permission required to use this endpoint.",
          "permissions": [
            "EXPORT_PDF"
          ]
        }
      }
    }
  },
  "servers": [
    {
      "description": "GoodData.CN endpoint",
      "url": "/"
    }
  ],
  "tags": [
    {
      "description": "| execution of some form of computation (RPC over JSON)",
      "name": "actions"
    }
  ]
}
